{"version":3,"sources":["../server.js"],"names":["express","require","app","server","createServer","io","listen","mongoose","users","connections","use","static","__dirname","process","env","PORT","console","log","get","req","res","sendFile","sockets","on","socket","push","length","data","splice","indexOf","emit","msg"],"mappings":";;AAAA;;;AAGA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMF,SAAZ;AACA,IAAMG,SAASF,QAAQ,MAAR,EAAgBG,YAAhB,CAA6BF,GAA7B,CAAf;AACA,IAAMG,KAAKJ,QAAQ,WAAR,EAAqBK,MAArB,CAA4BH,MAA5B,CAAX;AACA,IAAMI,WAAWN,QAAQ,UAAR,CAAjB;;AAGAO,QAAQ,EAAR;AACAC,cAAa,EAAb;AACAP,IAAIQ,GAAJ,CAAQV,QAAQW,MAAR,CAAeC,YAAY,GAA3B,CAAR;AACAT,OAAOG,MAAP,CAAcO,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC;AACAC,QAAQC,GAAR,CAAY,mBAAZ;;AAEAf,IAAIgB,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC7BA,QAAIC,QAAJ,CAAaT,YAAY,aAAzB;AAEH,CAHD;AAIAP,GAAGiB,OAAH,CAAWC,EAAX,CAAc,YAAd,EAA4B,UAAUC,MAAV,EAAkB;AAC1Cf,gBAAYgB,IAAZ,CAAiBD,MAAjB;AACAR,YAAQC,GAAR,CAAY,kCAAZ,EAAgD,CAAER,YAAYiB,MAA9D;AACA;AACAF,WAAOD,EAAP,CAAU,YAAV,EAAwB,UAAUI,IAAV,EAAgB;AACpClB,oBAAYmB,MAAZ,CAAmBnB,YAAYoB,OAAZ,CAAoBL,MAApB,CAAnB,EAAgD,CAAhD;AACAR,gBAAQC,GAAR,CAAY,qCAAZ,EAAmD,CAAER,YAAYiB,MAAjE;AACH,KAHD;AAIAF,WAAOD,EAAP,CAAW,cAAX,EAA2B,UAAUI,IAAV,EAAgB;AACvCtB,WAAGiB,OAAH,CAAWQ,IAAX,CAAgB,aAAhB,EAA+B,EAACC,KAAKJ,IAAN,EAA/B;AACAX,gBAAQC,GAAR,CAAYU,IAAZ;AAEH,KAJD;AAKH,CAbD","file":"server.js","sourcesContent":["/**\r\n * Created by Kasper Terp on 21-02-2017.\r\n */\r\nconst express = require('express');\r\nconst app = express();\r\nconst server = require('http').createServer(app);\r\nconst io = require('socket.io').listen(server);\r\nconst mongoose = require('mongoose');\r\n\r\n\r\nusers = [];\r\nconnections =[];\r\napp.use(express.static(__dirname + '/'));\r\nserver.listen(process.env.PORT || 3000);\r\nconsole.log(\"server is running\");\r\n\r\napp.get('/', function (req, res) {\r\n    res.sendFile(__dirname + '/index.html')\r\n    \r\n});\r\nio.sockets.on('connection', function (socket) {\r\n    connections.push(socket);\r\n    console.log('connected : %s socekts connected', + connections.length);\r\n    // discconnect\r\n    socket.on('disconnect', function (data) {\r\n        connections.splice(connections.indexOf(socket), 1);\r\n        console.log(\"disconnected: %s  sockets connected\", + connections.length)\r\n    });\r\n    socket.on ('send message', function (data) {\r\n        io.sockets.emit('new message', {msg: data});\r\n        console.log(data);\r\n        \r\n    });\r\n});\r\n\r\n"]}